//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HMS.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HMS_DBEntity : DbContext
    {
        public HMS_DBEntity()
            : base("name=HMS_DBEntity")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tblAdmissionType> tblAdmissionTypes { get; set; }
        public virtual DbSet<tblDoctor> tblDoctors { get; set; }
        public virtual DbSet<tblEmpDesignation> tblEmpDesignations { get; set; }
        public virtual DbSet<tblEmployee> tblEmployees { get; set; }
        public virtual DbSet<tblEmployeeQualification> tblEmployeeQualifications { get; set; }
        public virtual DbSet<tblEmployeeSatu> tblEmployeeSatus { get; set; }
        public virtual DbSet<tblEmployeeType> tblEmployeeTypes { get; set; }
        public virtual DbSet<tblHospital> tblHospitals { get; set; }
        public virtual DbSet<tblHospitalRoom> tblHospitalRooms { get; set; }
        public virtual DbSet<tblMedicine> tblMedicines { get; set; }
        public virtual DbSet<tblMedicineCategory> tblMedicineCategories { get; set; }
        public virtual DbSet<tblMedicineOccurance> tblMedicineOccurances { get; set; }
        public virtual DbSet<tblMedicineTiming> tblMedicineTimings { get; set; }
        public virtual DbSet<tblPatient> tblPatients { get; set; }
        public virtual DbSet<tblPatientAdmission> tblPatientAdmissions { get; set; }
        public virtual DbSet<tblPatientAppointment> tblPatientAppointments { get; set; }
        public virtual DbSet<tblPatientBill> tblPatientBills { get; set; }
        public virtual DbSet<tblPatientBillDetail> tblPatientBillDetails { get; set; }
        public virtual DbSet<tblPatientMedicine> tblPatientMedicines { get; set; }
        public virtual DbSet<tblPatientStatu> tblPatientStatus { get; set; }
        public virtual DbSet<tblPatientTest> tblPatientTests { get; set; }
        public virtual DbSet<tblPatientTestDetail> tblPatientTestDetails { get; set; }
        public virtual DbSet<tblPatientType> tblPatientTypes { get; set; }
        public virtual DbSet<tblRoomType> tblRoomTypes { get; set; }
        public virtual DbSet<tblTest> tblTests { get; set; }
        public virtual DbSet<tblTestAttribute> tblTestAttributes { get; set; }
        public virtual DbSet<tblTestCategory> tblTestCategories { get; set; }
        public virtual DbSet<UserInRole> UserInRoles { get; set; }
        public virtual DbSet<UserLoginHistory> UserLoginHistories { get; set; }
        public virtual DbSet<UserRole> UserRoles { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<tblPage> tblPages { get; set; }
        public virtual DbSet<tblUserPage> tblUserPages { get; set; }
    
        public virtual ObjectResult<GetPatientAdmits_Result> GetPatientAdmits()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPatientAdmits_Result>("GetPatientAdmits");
        }
    
        public virtual ObjectResult<GetPatientAppointements_Result> GetPatientAppointements()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPatientAppointements_Result>("GetPatientAppointements");
        }
    
        public virtual ObjectResult<GetPatientList_Result> GetPatientList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPatientList_Result>("GetPatientList");
        }
    
        public virtual ObjectResult<GetPatientMedicineList_Result> GetPatientMedicineList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPatientMedicineList_Result>("GetPatientMedicineList");
        }
    
        public virtual ObjectResult<GetPatientMedList_Result> GetPatientMedList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPatientMedList_Result>("GetPatientMedList");
        }
    
        public virtual ObjectResult<GetpatientTestDetails_Result> GetpatientTestDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetpatientTestDetails_Result>("GetpatientTestDetails");
        }
    
        public virtual ObjectResult<Patient_Count_Result> Patient_Count()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Patient_Count_Result>("Patient_Count");
        }
    
        public virtual int PatientAdmission()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PatientAdmission");
        }
    
        public virtual ObjectResult<Sp_ActivePatientsList_Result> Sp_ActivePatientsList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_ActivePatientsList_Result>("Sp_ActivePatientsList");
        }
    
        public virtual ObjectResult<Sp_Dashboard_Result> Sp_Dashboard()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Dashboard_Result>("Sp_Dashboard");
        }
    
        public virtual int sp_DeletePatient(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeletePatient", patientIDParameter);
        }
    
        public virtual int sp_DeletePatientBill(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeletePatientBill", iDParameter);
        }
    
        public virtual ObjectResult<Sp_PatientAdmissions_Result> Sp_PatientAdmissions()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_PatientAdmissions_Result>("Sp_PatientAdmissions");
        }
    
        public virtual ObjectResult<Sp_RoomsOccupied_Result> Sp_RoomsOccupied()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_RoomsOccupied_Result>("Sp_RoomsOccupied");
        }
    
        public virtual ObjectResult<Sp_StaffSpeciality_Result> Sp_StaffSpeciality()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_StaffSpeciality_Result>("Sp_StaffSpeciality");
        }
    
        public virtual ObjectResult<string> Sp_TestsCategories()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Sp_TestsCategories");
        }
    
        public virtual ObjectResult<GetMenu_Result> GetMenu()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMenu_Result>("GetMenu");
        }
    }
}
